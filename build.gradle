// Top-level build file where you can add configuration options common to all sub-projects/modules.

//==================================================================================================
//region // Repositories

buildscript {
    repositories {
        // local cache of google maven repository
        maven { url GOOGLE_MAVEN_URL }
        google()

        // local cache of jcenter maven repository
        maven { url JCENTER_MAVEN_URL }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()

        // honeycomb maven repository
        maven { url HONEYCOMB_MAVEN_URL }

        // local cache of google maven repository
        maven { url GOOGLE_MAVEN_URL }
        google()

        // local cache of jcenter maven repository
        maven { url JCENTER_MAVEN_URL }
        jcenter()
    }
}

//endregion
//==================================================================================================

//==================================================================================================
//region // Common properties

def versionName = getVersionName()
def versionCode = getVersionCode()

subprojects {
    // Common maven groupId for all projects
    group 'com.honeycomb'

    // Common maven version for all projects
    version versionName

    ext {
        minSdk = 10
        targetSdk = 27
        compileSdk = 27

        projectVersionCode = versionCode

        // define version for dependencies
        supportLibraryVersion = '27.1.0'
        butterKnifeVersion = '8.8.1'
    }
}

//endregion
//==================================================================================================

task clean(type: Delete) {
    delete rootProject.buildDir
}

task projectInfo {
    doLast {
        println " ==========================="
        println " ${project.name}"
        println " version: ${versionName}(${versionCode})"
        println " ---------------------------"
    }
}

private static def getVersionName() {
    def cmd = 'git describe --tags'
    cmd.execute().text.trim()
}

private static def getVersionCode() {
    // Get git commit count as version code.
    def cmd = 'git rev-list HEAD --count'
    cmd.execute().text.trim().toInteger()
}
